<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--Data marked TEXT_HERE, INLET_TYPE, OUTLET_TYPE, ARG_NAME and ARG_TYPE need to be filled in-->
<c74object name="j.parameter_array" module="" category="Jamoma">
	<digest>
		Handling array of messages in Jamoma model
	</digest>
	<description>
		j.parameter_array creates an array of messages in a Jamoma model
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Jamoma
		</metadata>
		<metadata name="tag">
			message
		</metadata>
		<metadata name="tag">
			Jamoma
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				set the value of the selected instance(s)
			</digest>
			<description>
				<!-- TEXT_HERE -->
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				index
			</digest>
			<description>
				Index of the instance to send value to. (1 to max number of instance. * will send value to all instances)
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="OUTLET_TYPE">
			<digest>
				direct: values
			</digest>
			<description>
				<!-- TEXT_HERE -->
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg id="0" name="OBJARG_NAME" type="OBJARG_TYPE" optional="0">
			<digest>
				OSC name defining an array of messages in the namespace using a bracket-based syntaxe: my/message.[2]
			</digest>
			<description>
				OSC name defining an array of messages in the namespace using a bracket-based syntaxe: my/message.[2]
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="anything">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0" />
			</arglist>
			<digest>
				<!-- TEXT_HERE -->
			</digest>
			<description>
				<!-- TEXT_HERE -->
			</description>
		</method>
		<method name="address">
			<arglist>
				<arg name="ARG_NAME_0" type="symbol" optional="0" />
			</arglist>
			<digest>
				Define an array of messages in the namespace. Ex: 'address my/message.[5]'
			</digest>
			<description>
				The address message followed by an osc name containing a number of instances placed in bracket declares an array of messages in the namespace. Ex: 'address my/message.[5]'
			</description>
		</method>
		<method name="array/select">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0" />
			</arglist>
			<digest>
				This message select which j.parameter_array's instance to address
			</digest>
			<description>
				This message select which j.parameter_array's instance to address
			</description>
		</method>
		<method name="array/resize">
			<arglist>
				<arg name="ARG_NAME_0" type="int" optional="0" />
			</arglist>
			<digest>
				Change the number of instances			
			</digest>
			<description>
				Change the number of instances
			</description>
		</method>
		<method name="dec">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0" />
			</arglist>
			<digest>
				Decrement the value by the amount defined by the @stepsize attribute
			</digest>
			<description>
				Decrement the value by the amount defined by the @stepsize attribute
			</description>
		</method>
		<method name="dump">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0" />
			</arglist>
			<digest>
				Dump all attributes out the right-most outlet
			</digest>
			<description>
				Dump all attributes out the right-most outlet
			</description>
		</method>
		<method name="inc">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0" />
			</arglist>
			<digest>
				Increment the value by the amount defined by the @stepsize attribute
			</digest>
			<description>
				Increment the value by the amount defined by the @stepsize attribute
			</description>
		</method>
		<method name="init">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0" />
			</arglist>
			<digest>
				Reset the selected j.message instance to its default state
			</digest>
			<description>
				Reset the selected j.message instance to its default state
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="active" get="1" set="1" type="int" size="1">
			<digest>
				Set whether the array of j.message is enable or not
			</digest>
			<description>
				Set whether the array of j.message is enable or not
			</description>
			<attributelist>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="dataspace" get="1" set="1" type="symbol" size="1">
			<digest>
				Set what dataspace used internally by the message for unit conversions
			</digest>
			<description>
				Set what dataspace used internally by the message for unit conversions (angle, color, distance, gain, none, orientation, position, speed, temperature, time)
			</description>
		</attribute>
		<attribute name="unit" get="1" set="1" type="symbol" size="1">
			<digest>
				The dataspace unit used for communication to the algorithm from the outside world
			</digest>
			<description>
				The dataspace unit used for remote communication. Available values depend on the dataspace attribute value. See j.unit help patch for more information.			</description>
		</attribute>
		<attribute name="description" get="1" set="1" type="symbol" size="1">
			<digest>
				Short info about the message
			</digest>
			<description>
				Short info about the message. Used for auto-documentation of the model
			</description>
		</attribute>
		<attribute name="format" get="1" set="1" type="symbol" size="1">
			<digest>
				Format of the values output: single or array
			</digest>
			<description>
				Format of the values output: single or array
			</description>
			<attributelist>
				<attribute name="enumvals" get="1" set="1" type="atom" size="2">
					<enumlist>
						<enum name="single">
							<digest>
								Values are output instance by instance
							</digest>
							<description>
								Values are output instance by instance
							</description>
						</enum>
						<enum name="array">
							<digest>
								TEXT_HERE
							</digest>
							<description>
								TEXT_HERE
							</description>
						</enum>
					</enumlist>
				</attribute>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum" />
			</attributelist>
		</attribute>
		<!-- <attribute name="priority" get="1" set="1" type="int" size="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</attribute> -->
		<attribute name="ramp/drive" get="1" set="1" type="symbol" size="1">
			<digest>
				Determines the mechanism used to drive ramping to new message values. Options are: none, Max
			</digest>
			<description>
				Determines the mechanism used to drive ramping to new message values. Options are: none, Max
			</description>
		</attribute>
		<attribute name="ramp/function" get="1" set="1" type="symbol" size="1">
			<digest>
				The mapping function determining the curve of the ramping to new message value
			</digest>
			<description>
				The mapping function determining the curve of the ramping to new message value
			</description>
		</attribute>
		<attribute name="ramp/function/parameters" get="1" set="1" type="atom" size="1">
			<digest>
				Optional parameters for the chosen ramping function
			</digest>
			<description>
				Optional parameters for the chosen ramping function
			</description>
		</attribute>
		<attribute name="ramp/status" get="1" set="1" type="int" size="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</attribute>
		<attribute name="range" get="1" set="1" type="atom" size="1">
			<digest>
				Lower and upper boundaries defining the range of possible message values
			</digest>
			<description>
				Lower and upper boundaries defining the range of possible message values
			</description>
		</attribute>
		<attribute name="clipmode" get="1" set="1" type="symbol" size="1">
			<digest>
				Define clipping behaviour at the boundaries of the message range
			</digest>
			<description>
				Define clipping behaviour at the boundaries of the message range. Options are: none, low, high, wrap, fold
			</description>
		</attribute>
		<attribute name="repetitions/filter" get="1" set="1" type="int" size="1">
			<digest>
				Determines whether repeated message values will be filtered: when this attribute is enabled, repetitions are filtered out (like [change] object in Max)
			</digest>
			<description>
				Determines whether repeated message values will be filtered: when this attribute is enabled, repetitions are filtered out (like [change] object in Max)
			</description>
		</attribute>
		<!-- <attribute name="service" get="1" set="1" type="symbol" size="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</attribute> -->
		<attribute name="tags" get="1" set="1" type="atom" size="1">
			<digest>
Some optional tags			</digest>
			<description>
Some optional tags			</description>
		</attribute>
		<attribute name="type" get="1" set="1" type="symbol" size="1">
			<digest>
				Datatype of the message. Options are: decimal, integer, boolean, string, array, generic
			</digest>
			<description>
				Datatype of the message. Options are: decimal, integer, boolean, string, array, generic
			</description>
		</attribute>
		<attribute name="value" get="1" set="1" type="int" size="1">
			<digest>
				Current message value
			</digest>
			<description>
				Current message value
			</description>
		</attribute>
		<attribute name="default" get="1" set="1" type="int" size="1">
			<digest>
				Default message value
			</digest>
			<description>
				Default message value
			</description>
		</attribute>
		<attribute name="stepsize" get="1" set="1" type="int" size="1">
			<digest>
				incrementation/decrementation amount			
			</digest>
			<description>
				Step by which the current value is being increased/decreased when a 'inc' or 'dec' message is received
			</description>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example caption="" img="" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="j.message"/>
		<seealso name="j.parameter_array"/>
		<seealso name="j.parameter_array"/>
	</seealsolist>
</c74object>
